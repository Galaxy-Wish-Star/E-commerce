{"ast":null,"code":"//search模块仓库\n\n//引入Vuex\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\n// //使用vuex来集中管理状态,必要\n// //new store的前提是必须要使用Vuex插件\nVue.use(Vuex);\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n  //收到上下文对象(包含commit)和dispatch过来的值\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {};\n\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {};\n\n// //创建并暴露store\nexport default {\n  actions,\n  mutations,\n  state\n};","map":{"version":3,"names":["Vue","Vuex","use","actions","mutations","getters","state"],"sources":["D:/E-commerce/src/store/search/index.js"],"sourcesContent":["//search模块仓库\r\n\r\n//引入Vuex\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n// //使用vuex来集中管理状态,必要\r\n// //new store的前提是必须要使用Vuex插件\r\nVue.use(Vuex);\r\n// //创建actions(本质就是对象) 用于响应组件中的动作\r\nconst actions = {\r\n\t//收到上下文对象(包含commit)和dispatch过来的值\r\n};\r\n\r\n// //创建mutations(本质也是对象) 用于修改数据(state)\r\nconst mutations = {};\r\n\r\n// //准备getters用于加工state，将其共享于各个组件当中\r\nconst getters = {\r\n    \r\n};\r\n\r\n// //准备state(数据) 存储数据\r\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\r\nconst state = {};\r\n\r\n// //创建并暴露store\r\nexport default ({\r\n    actions,\r\n    mutations,\r\n    state,\r\n});\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA;AACAD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AACb;AACA,MAAME,OAAO,GAAG;EACf;AAAA,CACA;;AAED;AACA,MAAMC,SAAS,GAAG,CAAC,CAAC;;AAEpB;AACA,MAAMC,OAAO,GAAG,CAEhB,CAAC;;AAED;AACA;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC;;AAEhB;AACA,eAAgB;EACZH,OAAO;EACPC,SAAS;EACTE;AACJ,CAAC"},"metadata":{},"sourceType":"module"}