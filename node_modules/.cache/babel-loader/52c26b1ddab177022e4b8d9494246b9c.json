{"ast":null,"code":"//home模块仓库\n\n//引入Vuex\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\n// //使用vuex来集中管理状态,必要\nimport { reqCategoryList } from \"@/api\";\nVue.use(Vuex);\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n  //收到上下文对象(包含commit)和dispatch过来的值\n  // 获取服务器数据\n  categoryList() {\n    request = ca;\n  }\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {};\n\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {};\n\n// //创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state\n});","map":{"version":3,"names":["Vue","Vuex","reqCategoryList","use","actions","categoryList","request","ca","mutations","getters","state","Store"],"sources":["D:/E-commerce/src/store/home/index.js"],"sourcesContent":["//home模块仓库\r\n\r\n//引入Vuex\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n// //使用vuex来集中管理状态,必要\r\nimport { reqCategoryList } from \"@/api\";\r\n\r\nVue.use(Vuex);\r\n// //创建actions(本质就是对象) 用于响应组件中的动作\r\nconst actions = {\r\n    //收到上下文对象(包含commit)和dispatch过来的值\r\n    // 获取服务器数据\r\n    categoryList() {\r\n        request=ca\r\n    },\r\n};\r\n\r\n// //创建mutations(本质也是对象) 用于修改数据(state)\r\nconst mutations = {};\r\n\r\n// //准备getters用于加工state，将其共享于各个组件当中\r\nconst getters = {};\r\n\r\n// //准备state(数据) 存储数据\r\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\r\nconst state = {};\r\n\r\n// //创建并暴露store\r\nexport default new Vuex.Store({\r\n    actions,\r\n    mutations,\r\n    state,\r\n});\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA,SAASC,eAAe,QAAQ,OAAO;AAEvCF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AACb;AACA,MAAMG,OAAO,GAAG;EACZ;EACA;EACAC,YAAY,GAAG;IACXC,OAAO,GAACC,EAAE;EACd;AACJ,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG,CAAC,CAAC;;AAEpB;AACA,MAAMC,OAAO,GAAG,CAAC,CAAC;;AAElB;AACA;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC;;AAEhB;AACA,eAAe,IAAIT,IAAI,CAACU,KAAK,CAAC;EAC1BP,OAAO;EACPI,SAAS;EACTE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}