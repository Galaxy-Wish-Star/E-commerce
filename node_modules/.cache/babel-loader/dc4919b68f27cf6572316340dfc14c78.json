{"ast":null,"code":"// /**\n//  * 该文件用于创建vuex中最核心的store\n//  */\n\n//引入Vuex\nimport Vuex from \"vuex\";\nimport Vue from \"vue\";\n\n// //使用vuex来集中管理状态,必要\n// //new store的前提是必须要使用Vuex插件\nVue.use(Vuex);\n\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n  //收到上下文对象(包含commit)和dispatch过来的值\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {};\n\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {};\n\n// //创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state\n});","map":{"version":3,"names":["Vuex","Vue","use","actions","mutations","getters","state","Store"],"sources":["D:/E-commerce/src/store/index.js"],"sourcesContent":["// /**\n//  * 该文件用于创建vuex中最核心的store\n//  */\n\n//引入Vuex\nimport Vuex from \"vuex\";\nimport Vue from \"vue\";\n\n// //使用vuex来集中管理状态,必要\n// //new store的前提是必须要使用Vuex插件\nVue.use(Vuex);\n\n// //创建actions(本质就是对象) 用于响应组件中的动作\nconst actions = {\n\t//收到上下文对象(包含commit)和dispatch过来的值\n};\n\n// //创建mutations(本质也是对象) 用于修改数据(state)\nconst mutations = {};\n\n// //准备getters用于加工state，将其共享于各个组件当中\nconst getters = {\n    \n};\n\n// //准备state(数据) 存储数据\n// //类似于各个组件里的computed(计算属性),只不过它是共享的\nconst state = {};\n\n// //创建并暴露store\nexport default new Vuex.Store({\n    actions,\n    mutations,\n    state,\n});\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,KAAK;;AAErB;AACA;AACAA,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;;AAEb;AACA,MAAMG,OAAO,GAAG;EACf;AAAA,CACA;;AAED;AACA,MAAMC,SAAS,GAAG,CAAC,CAAC;;AAEpB;AACA,MAAMC,OAAO,GAAG,CAEhB,CAAC;;AAED;AACA;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC;;AAEhB;AACA,eAAe,IAAIN,IAAI,CAACO,KAAK,CAAC;EAC1BJ,OAAO;EACPC,SAAS;EACTE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}